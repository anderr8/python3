# Validando IPV4
# Com as flags VERBOSE ou X, é possível comentar dentro da expressão regular.
# [] → range

import re

# 0.0.0.0 255.255.255.255
# 025.258.963-10 02525896310

cpf = '025.258.963-10'
cpf_reg_exp = re.compile(r'^\d{3}\.\d{3}\.\d{3}-\d{2}$')
# print(cpf_reg_exp.search(cpf))

# Exemplo de comentário:
ip_reg_exp = re.compile(r'''
# Esta é a maneira mais precisa:        
        ^
        (?:
            25[0-5]| # 250-255
            2[0-4][0-9]| # 200-249
            1[0-9]{2}| # 100-199
            [1-9][0-9]| # 10-99
            [0-9] # 0-9
        )
        \.
        (?:
            25[0-5]| # 250-255
            2[0-4][0-9]| # 200-249
            1[0-9]{2}| # 100-199
            [1-9][0-9]| # 10-99
            [0-9] # 0-9
        )
        \.
        (?:
            25[0-5]| # 250-255
            2[0-4][0-9]| # 200-249
            1[0-9]{2}| # 100-199
            [1-9][0-9]| # 10-99
            [0-9] # 0-9
        )
        \.
        (?:
            25[0-5]| # 250-255
            2[0-4][0-9]| # 200-249
            1[0-9]{2}| # 100-199
            [1-9][0-9]| # 10-99
            [0-9] # 0-9
        )
        $

# Outro exemplo:
#   ^
#   (?:
#        (?:
#            25[0-5]| # 250-255
#            2[0-4][0-9]| # 200-249
#            1[0-9]{2}| # 100-199
#            [1-9][0-9]| # 10-99
#            [0-9] # 0-9
#        )
#        \.
#    ){3}
#        (?:
#            25[0-5]| # 250-255
#            2[0-4][0-9]| # 200-249
#            1[0-9]{2}| # 100-199
#            [1-9][0-9]| # 10-99
#            [0-9] # 0-9
#        )$

# Outro exemplo:
#    ^
#   (?:
#        (?:
#            25[0-5]| # 250-255
#            2[0-4][0-9]| # 200-249
#            1[0-9]{2}| # 100-199
#            [1-9][0-9]| # 10-99
#            [0-9] # 0-9
#        )
#        \.?  # ? => significa opcional
#    ){4}
#    \b
#    $

# Outro exemplo compacto:
# ip_reg_exp = re.compile(
#       r'^(?:(?:25[0-5]|2[0-4][0-9]|1|[0-9]{2}|[1-9][0-9]|[0-9])\.?){4}\b$
# ')


''', flags=re.X)

for i in range(301):
    ip = f'{i}.{i}.{i}.{i}'
    #print(ip)
    print(ip, ip_reg_exp.findall(ip))